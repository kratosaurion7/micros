I. Keyboard Driver
  1. Fix the arrow key problem.
  
II. Kernel Shell
  1. Create a fullscreen line-view functionality.

III. Memory
  1. Paging
    a. Add an options to set all pages to "Not Present" and an allocate on PF
       hook. Using that we can detect bad memory usage by watching when a module
       overlaps on another's pages.
  
IV. Disk IO
  1. Create helper methods for zeroing blocks of bytes. Or patterns.
  
V. Filesystem
  1. Return error values when FS operations fail.
  
VI. String Functions Review
  1. Some strings functions have problem with null termination. Find them and 
     fix them.
     
VII. General Improvement
  1. GDT and IDT are loaded at an address near 5MB and this area is close to the
     area where the OS stores a bunch of stuff. I had a bug where the GDT and 
     IDT tables were getting overwritten and caused a GPF. Memory manager is 
     loaded at 6MB to fix the problem. Find a better place for those tables.
     
  2. Create a malloc canary to detect buffer overflows. Extend each allocation
     by a couple of bytes and insert a special value. At some point, each 
     allocations are verified and if any allocation has its canary bytes 
     overwritten then we had a buffer overflow. The process is not automatic
     but it can help debugging some of the memory problems I've started having 
     with the new heap allocator.



