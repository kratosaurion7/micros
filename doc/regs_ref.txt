Call site ESP =     0x6022c0
Call site next EIP  0x103583
Call site EBP =     0x6022d8

Expected registers
eax            0x1      1
ecx            0x2      2
edx            0x3      3
ebx            0x4      4
esp            0x6022c0 0x6022c0
ebp            0x6022d8 0x6022d8
esi            0x7      7
edi            0x8      8
eip            0x10357e 0x10357e <task1+31>
eflags         0x2      [ ]
cs             0x8      8
ss             0x10     16
ds             0x10     16
es             0x10     16
fs             0x10     16
gs             0x10     16

When entering ks_suspend
EBP from upper frame is pushed
ESP is moved to ebp

So in the ks_suspend frame
    [ebp] = old ebp
    [ebp+4] = return address

So in the ks_suspend_stage2
    [ebp]+8 = call site ESP to account for 2 previous
              stack frame ebp pushes
    